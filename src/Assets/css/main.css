/*! tailwindcss v2.2.9 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */

:-moz-focusring {
  outline: auto;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
}

.container {
  max-width: calc(100% - 30px);
}

@media (min-width: 768px) {
  .container {
    max-width: calc(100% - 70px);
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 980px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1200px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1480px;
  }
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-0 {
  top: 0px;
}

.left-0 {
  left: 0px;
}

.top-1\/2 {
  top: 50%;
}

.right-0 {
  right: 0px;
}

.z-\[9999\] {
  z-index: 9999;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-\[8px\] {
  margin-top: 8px;
  margin-bottom: 8px;
}

.my-\[25px\] {
  margin-top: 25px;
  margin-bottom: 25px;
}

.my-\[30px\] {
  margin-top: 30px;
  margin-bottom: 30px;
}

.my-\[20px\] {
  margin-top: 20px;
  margin-bottom: 20px;
}

.mx-\[5px\] {
  margin-left: 5px;
  margin-right: 5px;
}

.mx-\[10px\] {
  margin-left: 10px;
  margin-right: 10px;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

.my-\[5px\] {
  margin-top: 5px;
  margin-bottom: 5px;
}

.mt-\[8px\] {
  margin-top: 8px;
}

.mt-\[80px\] {
  margin-top: 80px;
}

.mt-\[15px\] {
  margin-top: 15px;
}

.mr-\[15px\] {
  margin-right: 15px;
}

.mb-\[5px\] {
  margin-bottom: 5px;
}

.mr-\[80px\] {
  margin-right: 80px;
}

.ml-\[5px\] {
  margin-left: 5px;
}

.ml-0 {
  margin-left: 0px;
}

.ml-\[100\%\] {
  margin-left: 100%;
}

.mr-\[20px\] {
  margin-right: 20px;
}

.mt-\[5px\] {
  margin-top: 5px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-\[40px\] {
  height: 40px;
}

.h-screen {
  height: 100vh;
}

.h-\[35px\] {
  height: 35px;
}

.h-\[20px\] {
  height: 20px;
}

.h-\[30px\] {
  height: 30px;
}

.max-h-\[40px\] {
  max-height: 40px;
}

.w-\[15px\] {
  width: 15px;
}

.w-full {
  width: 100%;
}

.w-\[30px\] {
  width: 30px;
}

.w-\[40px\] {
  width: 40px;
}

.w-\[20px\] {
  width: 20px;
}

.w-\[350px\] {
  width: 350px;
}

.w-\[13px\] {
  width: 13px;
}

.w-\[12px\] {
  width: 12px;
}

.w-\[24px\] {
  width: 24px;
}

.w-\[25px\] {
  width: 25px;
}

.w-\[14px\] {
  width: 14px;
}

.min-w-\[350px\] {
  min-width: 350px;
}

.max-w-\[350px\] {
  max-width: 350px;
}

.max-w-\[40px\] {
  max-width: 40px;
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.translate-y-\[2px\] {
  --tw-translate-y: 2px;
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.transform {
  -webkit-transform: var(--tw-transform);
          transform: var(--tw-transform);
}

.cursor-text {
  cursor: text;
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.resize {
  resize: both;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-\[5px\] {
  gap: 5px;
}

.gap-\[15px\] {
  gap: 15px;
}

.self-center {
  align-self: center;
}

.rounded-\[3px\] {
  border-radius: 3px;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-\[5px\] {
  border-radius: 5px;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-gray-500 {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(254, 226, 226, var(--tw-bg-opacity));
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 250, 229, var(--tw-bg-opacity));
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}

.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

.bg-\[\#1273eb\] {
  --tw-bg-opacity: 1;
  background-color: rgba(18, 115, 235, var(--tw-bg-opacity));
}

.bg-\[\#e7e7e7\] {
  --tw-bg-opacity: 1;
  background-color: rgba(231, 231, 231, var(--tw-bg-opacity));
}

.bg-gradient-to-tl {
  background-image: linear-gradient(to top left, var(--tw-gradient-stops));
}

.from-\[\#7e588b\] {
  --tw-gradient-from: #7e588b;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(126, 88, 139, 0));
}

.via-\[\#4193aa\] {
  --tw-gradient-stops: var(--tw-gradient-from), #4193aa, var(--tw-gradient-to, rgba(65, 147, 170, 0));
}

.to-\[\#67d4a7\] {
  --tw-gradient-to: #67d4a7;
}

.bg-cover {
  background-size: cover;
}

.bg-center {
  background-position: center;
}

.fill-current {
  fill: currentColor;
}

.px-\[15px\] {
  padding-left: 15px;
  padding-right: 15px;
}

.px-\[10px\] {
  padding-left: 10px;
  padding-right: 10px;
}

.py-\[5px\] {
  padding-top: 5px;
  padding-bottom: 5px;
}

.px-\[5px\] {
  padding-left: 5px;
  padding-right: 5px;
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}

.py-\[15px\] {
  padding-top: 15px;
  padding-bottom: 15px;
}

.py-\[2px\] {
  padding-top: 2px;
  padding-bottom: 2px;
}

.py-\[3px\] {
  padding-top: 3px;
  padding-bottom: 3px;
}

.pr-\[10px\] {
  padding-right: 10px;
}

.pl-\[25px\] {
  padding-left: 25px;
}

.pt-\[15px\] {
  padding-top: 15px;
}

.pt-\[10px\] {
  padding-top: 10px;
}

.pl-\[15px\] {
  padding-left: 15px;
}

.pr-\[50px\] {
  padding-right: 50px;
}

.text-center {
  text-align: center;
}

.text-\[14px\] {
  font-size: 14px;
}

.text-\[25px\] {
  font-size: 25px;
}

.text-\[12px\] {
  font-size: 12px;
}

.text-\[13px\] {
  font-size: 13px;
}

.text-\[20px\] {
  font-size: 20px;
}

.text-\[15px\] {
  font-size: 15px;
}

.text-\[18px\] {
  font-size: 18px;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgba(16, 185, 129, var(--tw-text-opacity));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}

.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgba(37, 99, 235, var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-\[\#707885\] {
  --tw-text-opacity: 1;
  color: rgba(112, 120, 133, var(--tw-text-opacity));
}

.text-\[\#2d6ff7\] {
  --tw-text-opacity: 1;
  color: rgba(45, 111, 247, var(--tw-text-opacity));
}

.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgba(31, 41, 55, var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.text-blue-700 {
  --tw-text-opacity: 1;
  color: rgba(29, 78, 216, var(--tw-text-opacity));
}

.text-\[\#666\] {
  --tw-text-opacity: 1;
  color: rgba(102, 102, 102, var(--tw-text-opacity));
}

.text-\[\#5f5f5f\] {
  --tw-text-opacity: 1;
  color: rgba(95, 95, 95, var(--tw-text-opacity));
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.duration-300 {
  transition-duration: 300ms;
}

@-webkit-keyframes newTab {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes newTab {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

* {
  -webkit-animation: newTab 0.3s ease;
          animation: newTab 0.3s ease;
}

body {
  background: #F7FAFC;
}

/* Menu */

@media (max-width: 1024px) {
  .menu_top {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: 40%;
    background-color: white;
    color: black;
    transition-duration: 0.3s;
  }
}

@media (max-width: 768px) {
  .menu_top {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: 50%;
    background-color: white;
    color: black;
    transition-duration: 0.3s;
  }
}

@media (max-width: 640px) {
  .menu_top {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    background-color: white;
    color: black;
    transition-duration: 0.3s;
  }
}

/* auth */

.input:focus+label, .input:active+label {
  color: #3182CE;
}

/* error */

.icon-error {
  position: relative;
  -webkit-animation: shaky 0.2s ease;
          animation: shaky 0.2s ease;
  transition-delay: 0.2s;
}

@-webkit-keyframes shaky {
  0%, 33%, 67%, 100% {
    right: 0;
  }

  17%, 83% {
    right: 5px;
  }

  50% {
    right: -5px;
  }
}

@keyframes shaky {
  0%, 33%, 67%, 100% {
    right: 0;
  }

  17%, 83% {
    right: 5px;
  }

  50% {
    right: -5px;
  }
}

/* menu */

.menu-after::after {
  position: absolute;
  content: "";
  top: 50%;
  right: -0.5px;
  width: 1px;
  height: 65%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  background: #7e588b;
}

.after\:absolute::after {
  content: "";
  position: absolute;
}

.after\:bottom-\[-16px\]::after {
  content: "";
  bottom: -16px;
}

.after\:left-0::after {
  content: "";
  left: 0px;
}

.after\:h-\[2px\]::after {
  content: "";
  height: 2px;
}

.after\:w-full::after {
  content: "";
  width: 100%;
}

.after\:rounded::after {
  content: "";
  border-radius: 0.25rem;
}

.after\:bg-\[\#1273eb\]::after {
  content: "";
  --tw-bg-opacity: 1;
  background-color: rgba(18, 115, 235, var(--tw-bg-opacity));
}

.hover\:border-\[\#67d4a8\]:hover {
  --tw-border-opacity: 1;
  border-color: rgba(103, 212, 168, var(--tw-border-opacity));
}

.hover\:bg-blue-800:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(30, 64, 175, var(--tw-bg-opacity));
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

.hover\:bg-\[\#67d4a8\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(103, 212, 168, var(--tw-bg-opacity));
}

.hover\:bg-blue-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}

.hover\:bg-\[\#0d61c7\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(13, 97, 199, var(--tw-bg-opacity));
}

.hover\:bg-gray-300:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));
}

.hover\:text-blue-600:hover {
  --tw-text-opacity: 1;
  color: rgba(37, 99, 235, var(--tw-text-opacity));
}

.hover\:text-blue-800:hover {
  --tw-text-opacity: 1;
  color: rgba(30, 64, 175, var(--tw-text-opacity));
}

.hover\:text-\[\#51ffb9\]:hover {
  --tw-text-opacity: 1;
  color: rgba(81, 255, 185, var(--tw-text-opacity));
}

.hover\:text-\[\#fff\]:hover {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.hover\:underline:hover {
  text-decoration: underline;
}

.focus\:border-blue-600:focus {
  --tw-border-opacity: 1;
  border-color: rgba(37, 99, 235, var(--tw-border-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (min-width: 640px) {
  .sm\:ml-\[50\%\] {
    margin-left: 50%;
  }

  .sm\:w-2\/3 {
    width: 66.666667%;
  }

  .sm\:w-\[30px\] {
    width: 30px;
  }

  .sm\:w-\[25px\] {
    width: 25px;
  }

  .sm\:text-\[30px\] {
    font-size: 30px;
  }

  .sm\:text-\[23px\] {
    font-size: 23px;
  }

  .sm\:text-\[16px\] {
    font-size: 16px;
  }
}

@media (min-width: 768px) {
  .md\:ml-\[60\%\] {
    margin-left: 60%;
  }

  .md\:block {
    display: block;
  }

  .md\:py-\[5px\] {
    padding-top: 5px;
    padding-bottom: 5px;
  }
}

@media (min-width: 1024px) {
  .lg\:ml-0 {
    margin-left: 0px;
  }

  .lg\:block {
    display: block;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:translate-y-\[2px\] {
    --tw-translate-y: 2px;
    -webkit-transform: var(--tw-transform);
            transform: var(--tw-transform);
  }

  .lg\:transform {
    -webkit-transform: var(--tw-transform);
            transform: var(--tw-transform);
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:justify-between {
    justify-content: space-between;
  }

  .lg\:gap-\[20px\] {
    gap: 20px;
  }

  .lg\:gap-\[5px\] {
    gap: 5px;
  }

  .lg\:rounded {
    border-radius: 0.25rem;
  }

  .lg\:border {
    border-width: 1px;
  }

  .lg\:border-solid {
    border-style: solid;
  }

  .lg\:border-\[\#fff0\] {
    border-color: #fff0;
  }

  .lg\:border-white {
    --tw-border-opacity: 1;
    border-color: rgba(255, 255, 255, var(--tw-border-opacity));
  }

  .lg\:border-\[\#1273eb\] {
    --tw-border-opacity: 1;
    border-color: rgba(18, 115, 235, var(--tw-border-opacity));
  }

  .lg\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }

  .lg\:py-0 {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  .lg\:px-\[15px\] {
    padding-left: 15px;
    padding-right: 15px;
  }

  .lg\:py-\[5px\] {
    padding-top: 5px;
    padding-bottom: 5px;
  }

  .lg\:pt-0 {
    padding-top: 0px;
  }

  .lg\:text-gray-800 {
    --tw-text-opacity: 1;
    color: rgba(31, 41, 55, var(--tw-text-opacity));
  }

  .lg\:after\:absolute::after {
    content: "";
    position: absolute;
  }

  .lg\:after\:bottom-\[-15px\]::after {
    content: "";
    bottom: -15px;
  }

  .lg\:after\:right-0::after {
    content: "";
    right: 0px;
  }

  .lg\:after\:h-\[2px\]::after {
    content: "";
    height: 2px;
  }

  .lg\:after\:w-full::after {
    content: "";
    width: 100%;
  }

  .lg\:after\:bg-\[\#1273eb\]::after {
    content: "";
    --tw-bg-opacity: 1;
    background-color: rgba(18, 115, 235, var(--tw-bg-opacity));
  }

  .lg\:hover\:text-blue-600:hover {
    --tw-text-opacity: 1;
    color: rgba(37, 99, 235, var(--tw-text-opacity));
  }
}